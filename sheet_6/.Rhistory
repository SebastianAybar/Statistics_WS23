#sheet 6
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
# Beispiel: Verwendung der min-Funktion
zahlen <- c(14, 27, 5, 8, 12)
# Finde das Minimum aus der Liste von Zahlen
minimum <- min(zahlen)
print(minimum)
total_balls <- 100
red_balls <- 30
drawn_balls <- 20
possible_X <- 0:drawn_balls
probs <- dhyper(x = possible_X, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
plot(probs)
print(probs)
barplot(probs)
barplot(probs, names.arg = possible_X)
barplot(probs,
names.arg = possible_X,
xlab = "Number of Red Balls Drawn",
ylab = "Probability",
main = "Hypergeometric Distribution")
#(c)Generate a sample of size 20 of values of X.
k_sample <- sample(possible_X, size = 20, replace = FALSE)
sample <- dhyper(k_sample, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
barplot(sample)
#(d)Compute P(5 < X < 15).
q1 <- dhyper(0.25, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
#(d)Compute P(5 < X < 15).
q1 <- qhyper(0.25, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
total_balls <- 100
red_balls <- 30
drawn_balls <- 20
possible_X <- 0:drawn_balls
probs <- dhyper(x = possible_X, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
#(b) Plot.
barplot(probs,
names.arg = possible_X,
xlab = "Number of Red Balls Drawn",
ylab = "Probability",
main = "Hypergeometric Distribution")
#(d)Compute P(5 < X < 15).
q1 <- qhyper(0.25, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
q2 <- qhyper(0.50, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
q3 <- qhyper(0.75, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
d <- q3-q1
#(d)
random_sample <- rhyper(20, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
random_sample <- rhyper(20, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
barplot(random_sample)
random_sample <- rhyper(20, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
print(random_sample)
random_sample
#(d)
d <- phyper(15, m = red_balls, n = total_balls - red_balls, k = drawn_balls) - phyper(5, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
plot(d)
a <- phyper(15, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
b <- phyper(5, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
x <- a-b
a <- phyper(15, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
b <- phyper(5-1, m = red_balls, n = total_balls - red_balls, k = drawn_balls)
x <- a-b
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
#Augabe 2.1.(a)
x_values <- seq(-10, 10, .1)
x_values
density_values <- dnorm(x_values, sd = 1.5, mean = 2.5)
density_values
plot(x_values, density_values)
plot(x_values, density_values, type = 1)
x_values <- seq(-10, 10, .1)
density_values <- dnorm(x_values, sd = 1.5, mean = 2.5)
plot(x_values, density_values, type = 1)
x_values <- seq(-10, 10, .1)
density_values <- dnorm(x_values, sd = 1.5, mean = 2.5)
plot(x_values, density_values, type = "1")
x_values <- seq(-10, 10, .1)
density_values <- dnorm(x_values, sd = 1.5, mean = 2.5)
plot(x_values, density_values, type = "1")
plot(x_values, density_values)
plot(x_values, density_values, type = "1")
plot(x_values, density_values, type = "l")
plot(x_values, density_values)
probability <- pnorm(2, sd = 1.5, mean = 2.5)
probability
prob_2 <- pnorm(1-3.1, sd = 1.5, mean = 2.5)
prob_2 <- pnorm(1 - 3.1, sd = 1.5, mean = 2.5)
prob_2 <- 1 - pnorm(3.1, sd = 1.5, mean = 2.5)
prob_3 <- pnorm(3.5, sd = 1.5, mean = 2.5) - pnorm(1, sd = 1.5, mean = 2.5)
plot(x_values, pnorm(x_values, sd = 1.5, mean = 2.5), type = "l")
q1 <- qnorm(x_values,  pnorm(x_values, sd = 1.5, mean = 2.5))
#Augabe 2.1.(a)
x_values <- seq(-10, 10, .1)
q1 <- qnorm(x_values,  pnorm(x_values, sd = 1.5, mean = 2.5))
q1 <- qnorm(0.25, x_values,  pnorm(x_values, sd = 1.5, mean = 2.5))
q1 <- qnorm(0.25, sd = 1.5, mean = 2.5)
x_val <- seq(0,1,.02)
quantiles <- qnorm(x_val, sd = 1.5, mean = 2.5)
y <- qnorm(x, sd = 1.5, mean = 2.5)
x <- seq(0,1,.02)
y <- qnorm(x, sd = 1.5, mean = 2.5)
plot(x, y, type = "l")
x <- seq(0,1,.025)
y <- qnorm(x, sd = 1.5, mean = 2.5)
plot(x, y, type = "l")
x <- seq(0,1,.25)
y <- qnorm(x, sd = 1.5, mean = 2.5)
plot(x, y, type = "l")
x <- seq(0,1,.02)
y <- qnorm(x, sd = 1.5, mean = 2.5)
plot(x, y, type = "l")
q1 <- 0.25
y <- qnorm(0.25, sd = 1.5, mean = 2.5)
plot(x, y, type = "l")
y <- qnorm(q1, sd = 1.5, mean = 2.5)
plot(x, y, type = "l")
#sheet 6
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
#Augabe 2.1.
x_values <- seq(-10, 10, .1)
x_values
density_values <- dnorm(x_values, sd = 1.5, mean = 2.5)
density_values
plot(x_values, density_values)
prob_1 <- pnorm(2, sd = 1.5, mean = 2.5)
prob_2 <- 1 - pnorm(3.1, sd = 1.5, mean = 2.5)
prob_1 <- pnorm(2, sd = 1.5, mean = 2.5)
prob_2 <- 1 - pnorm(3.1, sd = 1.5, mean = 2.5)
prob_3 <- pnorm(3.5, sd = 1.5, mean = 2.5) - pnorm(1, sd = 1.5, mean = 2.5)
plot(x_values, pnorm(x_values, sd = 1.5, mean = 2.5), type = "l")
x <- seq(0,1,.02)
y <- qnorm(x, sd = 1.5, mean = 2.5)
plot(x, y, type = "l")
x <- seq(0,1,.02)
x
y <- qnorm(x, sd = 1.5, mean = 2.5)
y
plot(x, y, type = "l")
plot(seq(0,1,.2), qnorm(seq(0,1,.2), sd = 1.5, mean = 2.5))
plot(seq(0,1,.2), qnorm(seq(0,1,.2), sd = 1.5, mean = 2.5), type = "l")
plot(x, y, type = "l")
plot(seq(0,1,.2), qnorm(seq(0,1,.2), sd = 1.5, mean = 2.5), type = "l")
plot(x, y, type = "l")
x <- seq(0,1,.02)
y <- qnorm(x, sd = 1.5, mean = 2.5)
plot(x, y, type = "l")
plot(seq(0,1,.2), qnorm(seq(0,1,.2), sd = 1.5, mean = 2.5), type = "l")
plot(x, y, type = "l")
plot(seq(0,1,.2), qnorm(seq(0,1,.2), sd = 1.5, mean = 2.5), type = "l")
plot(x, y, type = "l")
plot(seq(0,1,.2), qnorm(seq(0,1,.2), sd = 1.5, mean = 2.5), type = "l")
plot(seq(0,1,.02), qnorm(seq(0,1,.2), sd = 1.5, mean = 2.5), type = "l")
plot(seq(0,1,.02), qnorm(seq(0,1,.02), sd = 1.5, mean = 2.5), type = "l")
quantil <- qnorm(0.975, mean = 0, sd = 1)
print(quantil)
print(wahrscheinlichkeit)
wahrscheinlichkeit <- pnorm(1.96, mean = 0, sd = 1)
print(wahrscheinlichkeit)
plot(seq(-10, 10, 0.1), pnorm(seq(-10, 10, 0.1), mean = 0, sd = 1))
plot(seq(-10, 10, 0.1), dnorm(seq(-10, 10, 0.1), mean = 0, sd = 1))
#rnorm()
stichprobe <-  rnorm(10, sd = 1.5, mean = 2.5)
print(stichprobe)
mean(stichprobe)
hist(stichprobe)
stichprobe <-  rnorm(100, sd = 1.5, mean = 2.5)
hist(stichprobe)
#Aufgabe 2.2.
x_values <- seq(-10, 10, 1)
density_values <- dnorm(x_values, sd = 0.6, mean = 12.8)
plot(x_values, density_values)
#Aufgabe 2.2.
x_values <- seq(-100, 100, 1)
density_values <- dnorm(x_values, sd = 0.6, mean = 12.8)
plot(x_values, density_values)
#Aufgabe 2.2.
x_values <- seq(-100, 100, .1)
density_values <- dnorm(x_values, sd = 0.6, mean = 12.8)
plot(x_values, density_values)
#Aufgabe 2.2.
x_values <- seq(-10, 10, .1)
density_values <- dnorm(x_values, sd = 0.6, mean = 12.8)
plot(x_values, density_values)
#Aufgabe 2.2.
x_values <- seq(0, 20, .1)
density_values <- dnorm(x_values, sd = 0.6, mean = 12.8)
plot(x_values, density_values)
less_than_12_ounces <- pnorm(12, sd = 0.6, mean = 12.8)
#Aufgabe 2.2.
x_values <- seq(0, 20, .1)
density_values <- dnorm(x_values, sd = 0.5, mean = 12.8)
plot(x_values, density_values)
less_than_12_ounces <- pnorm(12, sd = 0.6, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.5, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.4, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.4, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.35, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.34, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.341, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.342, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.341, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3409, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3409, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3408, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3407, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.6, mean = 12.8)
first_percentil <- qnorm(0.01, sd = 1, mean = 12.8)
first_percentil <- qnorm(0.01, sd = 0.6, mean = 12.8)
first_percentil <- qnorm(0.01, sd = 1, mean = 12.8)
mean_weight <- 12.8  # Mean weight of bags in ounces
desired_percentile <- 0.01  # 1% of bags weigh less than 12 ounces
# Calculate the z-score corresponding to the desired percentile
z_score <- qnorm(desired_percentile, mean = mean_weight, sd = 0.6)
# Calculate the required standard deviation to achieve the desired percentile
required_sd <- (mean_weight - z_score) / 2.33
print(required_sd)
less_than_12_ounces <- pnorm(12, sd = 0.5990595, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.6, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.4, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.39, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.38, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.37, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.36, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.35, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.349, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.348, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.347, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.346, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.345, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.344, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3439, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3431, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3432, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3435, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3436, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3437, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3438, mean = 12.8)
less_than_12_ounces <- pnorm(12, sd = 0.3439, mean = 12.8)
less_than_12_ounces <- qnorm(0.01, sd = 0.6, mean = 12.8)
less_than_12_ounces <- qnorm(0.01, sd = 0.6, mean = 12.8)
z_score <- qnorm(0.01)
print(z_score)
z_score <- qnorm(0.01)
print(z_score)
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
z_score <- qnorm(0.01)
print(z_score)
(12-12.8)/qnorm(0.01,0,1)
(12-12.8)/qnorm(0.01)
(12-12.8)/qnorm(0.01,mean = 0, sd = 1)
#Aufgabe 2.3.
prob_at_least_750 <- pnorm(750, mean = 800, sd = 80)
prob_at_least_750 <- pnorm(750, mean = 800, sd = 80)
prob_exceeds_100 <- 1 - pnorm(1000, mean = 800, sd = 80)
#Aufgabe 2.3.
prob_at_least_750 <- 1 - pnorm(750, mean = 800, sd = 80)
#(b)
sample <- seq(0, 10000, 1)
quantil <- qnorm(0.975, mean = 0, sd = 1)
print(quantil)
plot(seq(0,1,.02), qnorm(seq(0,1,.02), sd = 1.5, mean = 2.5), type = "l")
#(b)
sample <- rnorm(10000, sd = 80, mean = 800)
hist(sample)
plot(sample)
hist(sample)
#(b)
unteren_5 <- qnorm(0.05, mean = 800, sd = 80)
oberen_5 y- 1 -qnorm(0.95, mean = 800, sd = 80)
oberen_5 y <- 1 -qnorm(0.95, mean = 800, sd = 80)
oberen_5 <- 1 - qnorm(0.95, mean = 800, sd = 80)
oberen_5 <- qnorm(0.95, mean = 800, sd = 80)
oberen_5 <- 1 -qnorm(0.95, mean = 800, sd = 80)
oberen_5 <- qnorm(0.95, mean = 800, sd = 80)
unteren_5 <- qnorm(0.025, mean = 800, sd = 80)
oberen_5 <- qnorm(0.975, mean = 800, sd = 80)
oberen_5 <- qnorm(0.975, mean = 800, sd = 80)
unteren_5 <- qnorm(0.025, mean = 800, sd = 80)
oberen_5 <- qnorm(0.975, mean = 800, sd = 80)
unteren_5 <- qnorm(0.025, mean = 10000*800, sd = 10000*80)
oberen_5 <- qnorm(0.975, mean = 10000*800, sd = 10000*80)
n <- 10000
mu <- 800
sigma <- 80
unteren_5 <- qnorm(0.025, mean = n*mu, sd = n^0.5*sigma)
oberen_5 <- qnorm(0.975, mean = n*mu, sd = n^0.5*sigma)
n <- 10000
mu <- 800
sigma <- 80
unteren_5 <- qnorm(0.025, mean = n*mu, sd = n^0.5*sigma)
oberen_5 <- qnorm(0.975, mean = n*mu, sd = n^0.5*sigma)
x <- pnorm(750, mean = 800, sd = 80)
x <- 1 - pnorm(750, mean = 800, sd = 80)
quantile <- qnorm(0.05)
quantile <- qnorm(0.1)
quantile <- qnorm(0.1, mean = 0, sd = 1)
quantile <- qnorm(0.1, mean = 800, sd = 80)
quantile <- qnorm(0.1, mean = 0, sd = 1)
quantile <- qnorm(0.1, mean = 800, sd = 80)
#(d)
x <- pnorm(750, mean = 800, sd = 80)
x <- pnorm(750, mean = 800, sd = 80)
print(x)
z <- rnorm(10, mean = 800, sd = 80)
print(z)
z <- rnorm(10, mean = 800, sd = 80)
print(z)
z <- rnorm(10, mean = 800, sd = 80)
print(z)
pbinom(q = 1, n = 10, prob = pnorm(750, mean = 800, sd = 80))
pbinom(q = 1, size = 10, prob = pnorm(750, mean = 800, sd = 80))
pbinom(p = 1, size = 10, prob = pnorm(750, mean = 800, sd = 80))
#Aufgabe 2.4.
Peter <- pnorm(723, mean = 720, sd = 5)
Paul <- pnorm(723, mean = 722, sd = 2)
#sheet 6
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
#Aufgabe 2.4.
Peter <- pnorm(723, mean = 720, sd = 5) - pnorm(717, mean = 720, sd = 5)
Paul <- pnorm(723, mean = 722, sd = 2) - pnorm(717, mean = 722, sd = 2)
prob <- Peter * Paul
Peter <- pnorm(723, mean = 720, sd = 5) - pnorm(717, mean = 720, sd = 5)
Paul <- pnorm(723, mean = 722, sd = 2) - pnorm(717, mean = 722, sd = 2)
prob <- Peter * Paul
#Aufgabe 2.4.
Peter <- pnorm(723, mean = 720, sd = 5) - pnorm(717, mean = 720, sd = 5)
Peter <- pnorm(723, mean = 720, sd = 5)
z <- pnorm(723,mean = 720, sd = 5)
pnorm(717, mean = 720, sd = 5)
#Aufgabe 2.4.
Peter <- pnorm(723, mean = 720, sd = 5) - pnorm(717, mean = 720, sd = 5)
Paul <- pnorm(723, mean = 722, sd = 2) - pnorm(717, mean = 722, sd = 2)
prob <- Peter * Paul
dnorm(sample, mean = 1.8, sd = 0.5)
density_values <- dnorm(sample, mean = 1.8, sd = 0.5)
sample <- seq(0, 3, 0.1)
density_values <- dnorm(sample, mean = 1.8, sd = 0.5)
plot(sample, density_values)
plot(sample, density_values, type = "l")
#(b)
b <- pnorm(2, mean = 1.8, sd = 0.5)
sample <- seq(0, 3, 0.1)
mu <- 1.2 + 0.6
sigma <- (0.3^2 + 0.2^2)^0.5
density_values <- dnorm(sample, mean = mu, sd = sigma)
plot(sample, density_values, type = "l")
#(b)
b <- pnorm(2, mean = mu, sd = sigma)
#(c)
neues_mu <- 1.2 * 2 + 0.6 * 2
#(c)
neues_mu <- 1.2 * 2 + 0.6 * 4
neue_var <- 2^2 * 0.3^2 + 4^2 * 0.2^2
neue_var <- 2^2 * var_melone + 4^2 * var_pineapple
sample <- seq(0, 3, 0.1)
mu_melone <- 1.2
mu_pineapple <- 0.6
var_melone <- 0.3^2
var_pineapple <- 0.2^2
sigma <- (var_melone + var_pineapple)^0.5
density_values <- dnorm(sample, mean = mu_melone+mu_pineapple, sd = sigma)
plot(sample, density_values, type = "l")
#(b)
b <- pnorm(2, mean = mu_melone+mu_pineapple, sd = sigma)
#(c)
neues_mu <- 1.2 * 2 + 0.6 * 4
neue_var <- 2^2 * var_melone + 4^2 * var_pineapple
neues_mu <- 1.2 * 2 + 0.6 * 4
neue_var <- 2^2 * var_melone + 4^2 * var_pineapple
neue_verteilung <- dnorm(sample, mean = neues_mu, sd = neue_var^0.5)
plot(sample, neue_verteilung)
neues_sample(0, 7, 0.1)
neue_verteilung <- dnorm(sample, mean = neues_mu, sd = neue_var^0.5)
plot(sample, neue_verteilung)
neues_mu <- 1.2 * 2 + 0.6 * 4
neue_var <- 2^2 * var_melone + 4^2 * var_pineapple
neues_sample <- seq(0, 7, 0.1)
neue_verteilung <- dnorm(sample, mean = neues_mu, sd = neue_var^0.5)
plot(sample, neue_verteilung)
neues_mu <- 1.2 * 2 + 0.6 * 4
neue_var <- 2^2 * var_melone + 4^2 * var_pineapple
neues_sample <- seq(0, 7, 0.1)
neue_verteilung <- dnorm(neues_sample, mean = neues_mu, sd = neue_var^0.5)
plot(sample, neue_verteilung)
neues_mu <- 1.2 * 2 + 0.6 * 4
neue_var <- 2^2 * var_melone + 4^2 * var_pineapple
neues_sample <- seq(0, 7, 0.1)
neue_verteilung <- dnorm(neues_sample, mean = neues_mu, sd = neue_var^0.5)
plot(neues_sample, neue_verteilung)
neues_mu <- 1.2 * 2 + 0.6 * 4
neue_var <- 2^2 * var_melone + 4^2 * var_pineapple
neues_sample <- seq(0, 10, 0.1)
neue_verteilung <- dnorm(neues_sample, mean = neues_mu, sd = neue_var^0.5)
plot(neues_sample, neue_verteilung)
neues_mu <- 1.2 * 2 + 0.6 * 4
neue_var <- 2^2 * var_melone + 4^2 * var_pineapple
neues_sample <- seq(0, 9, 0.1)
neue_verteilung <- dnorm(neues_sample, mean = neues_mu, sd = neue_var^0.5)
plot(neues_sample, neue_verteilung)
#(d)
prob <- 1 - pnorm(4, mean = neues_mu, sd = neue_var^0.5)
n <- 100
alpha <- 0.05
p.hat <- 0.4
q <- qnorm(1-alpha)
n <- 100
alpha <- 0.05
p.hat <- 0.4
q <- qnorm(1-alpha)
ub <- p.hat + q * sqrt(p.hat * (1-p.hat) / n)
x <- n * p.hat
ub_exact <- binom.test(x, n, alternative = "less", conf.level = 1-alpha)
View(ub_exact)
binom.test(x, n, alternative = "less", conf.level = 1-alpha)
ub_exact <- binom.test(x, n, alternative = "less", conf.level = 1-alpha)
ub_exact
ub_exact <- binom.test(x, n, alternative = "less", conf.level = 1-alpha)
View(ub_exact)
