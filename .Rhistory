#Aufgabe 7
str(mpg)
#Aufgabe 7
dataset <- str(mpg)
library("ggplot2")
#Aufgabe 7
dataset <- str(mpg)
#Aufgabe 8
list <_ ("John", "Mary", c(4, 6, 10))
#Aufgabe 8
liste <- ("John" "Mary", c(4, 6, 10))
#Aufgabe 8
liste <- ("John", "Mary", c(4, 6, 10))
#Aufgabe 8
liste <- list("John", "Mary", c(4, 6, 10))
liste
#Aufgabe 8
liste <- list(vater="John", mutter="Mary", kinder_alter=c(4, 6, 10))
liste
liste_1 <- list(vater="John", mutter="Mary", kinder_alter=c(4, 6, 10))
liste_2 <- list("Bob", "Cate", "Susan")
list_concatinate <- c(liste_1, liste_2)
View(list_concatinate)
list_concatinate_1 <- c(liste_1, liste_2)
list_concatinate_2 <- list(liste_1, liste_2)
View(list_concatinate_2)
View(list_concatinate_1)
liste_1 <- list(vater="John", mutter="Mary", kinder_alter=c(4, 6, 10))
liste_2 <- list("Bob", "Cate", "Susan")
list_concatinate_1 <- c(liste_1, liste_2)
list_concatinate_2 <- list(liste_1, liste_2)
list_concatinate_1
liste_1 <- list(vater="John", mutter="Mary", kinder_alter=c(4, 6, 10))
liste_2 <- list(kind_1_name="Bob", kind_2_name="Cate", kind_3_name="Susan")
list_concatinate_1 <- c(liste_1, liste_2)
list_concatinate_2 <- list(liste_1, liste_2)
list_concatinate_1
list_concatinate_2
View(list_concatinate_1)
list_concatinate_1
liste_kinder <- list()
# Schleife, um Namen und Alter hinzuzufügen
for (i in 1:length(liste_2)) {
kind_name <- liste_2[[paste0("kind_", i, "_name")]]
kind_alter <- liste_1[["kinder_alter"]][i]
liste_kinder[[i]] <- list(name = kind_name, alter = kind_alter)
}
# Ergebnisliste erstellen
list_concatinate_1 <- c(liste_1, liste_kinder)
list_concatinate_1
clear
cl
list_concatinate_1
View(list_concatinate_1)
liste_1 <- list(vater="John", mutter="Mary", kinder_alter=c(4, 6, 10))
liste_2 <- list(kind_1_name="Bob", kind_2_name="Cate", kind_3_name="Susan")
list_concatinate_1 <- c(liste_1, liste_2)
list_concatinate_2 <- list(liste_1, liste_2)
# Neue Liste erstellen
liste_kinder <- list()
# Schleife, um Namen und Alter hinzuzufügen
for (i in 1:length(liste_2)) {
kind_name <- liste_2[[paste0("kind_", i, "_name")]]
kind_alter <- liste_1[["kinder_alter"]][i]
liste_kinder[[i]] <- list(name = kind_name, alter = kind_alter)
}
list_concatinate_1
liste_kinder
View(liste_kinder)
View(list_concatinate_1)
liste_1 <- list(vater="John", mutter="Mary", kinder_alter=c(4, 6, 10))
liste_2 <- list(kind_1_name="Bob", kind_2_name="Cate", kind_3_name="Susan")
list_concatinate_1 <- c(liste_1, liste_2)
list_concatinate_2 <- list(liste_1, liste_2)
# Neue Liste erstellen
liste_kinder <- list()
# Schleife, um Namen und Alter hinzuzufügen
for (i in 1:length(liste_2)) {
kind_name <- liste_2[paste0("kind_", i, "_name")]
kind_alter <- liste_1["kinder_alter"][i]
liste_kinder[i] <- list(name = kind_name, alter = kind_alter)
}
liste_1 <- list(vater="John", mutter="Mary", kinder_alter=c(4, 6, 10))
liste_2 <- list(kind_1_name="Bob", kind_2_name="Cate", kind_3_name="Susan")
list_concatinate_1 <- c(liste_1, liste_2)
list_concatinate_2 <- list(liste_1, liste_2)
# Neue Liste erstellen
liste_kinder <- list()
# Schleife, um Namen und Alter hinzuzufügen
for (i in 1:length(liste_2)) {
kind_name <- liste_2[[paste0("kind_", i, "_name")]]
kind_alter <- liste_1[["kinder_alter"]][i]
liste_kinder[[i]] <- list(name = kind_name, alter = kind_alter)
}
liste_kinderliste_kinder
liste_1 <- list(vater="John", mutter="Mary", kinder_alter=c(4, 6, 10))
liste_2 <- list(kind_1_name="Bob", kind_2_name="Cate", kind_3_name="Susan")
list_concatinate_1 <- c(liste_1, liste_2)
list_concatinate_2 <- list(liste_1, liste_2)
# Neue Liste erstellen
liste_kinder <- list()
# Schleife, um Namen und Alter hinzuzufügen
for (i in 1:length(liste_2)) {
kind_name <- liste_2[[paste0("kind_", i, "_name")]]
kind_alter <- liste_1[["kinder_alter"]][i]
liste_kinder[[i]] <- list(name = kind_name, alter = kind_alter)
}
liste_kinder
View(liste_kinder)
library("ggplot2")
library("ggplot2")
#Aufgabe 7
str(mpg)
#Aufgabe 7
str(mpg) as tibble
load("C:/Users/sebas/OneDrive/Dokumente/Statistics_WS23/.RData")
student1 <- tibble(
student = c("Adam","Bernd","Christian","Doris"),
algebra = c(NA, 5, 3, 4),
analysis = c(2, NA, 1,3),
diskrete.math = c(3,NA,2,4),
)
student1 <- tibble(
student = c("Adam","Bernd","Christian","Doris"),
algebra = c(NA, 5, 3, 4),
analysis = c(2, NA, 1,3),
diskrete.math = c(3,NA,2,4),
)
library("ggplot2")
library("tidyverse")
student1 <- tibble(
student = c("Adam","Bernd","Christian","Doris"),
algebra = c(NA, 5, 3, 4),
analysis = c(2, NA, 1,3),
diskrete.math = c(3,NA,2,4),
)
student1 <- tibble(
student = c("Adam","Bernd","Christian","Doris"),
algebra = c(NA, 5, 3, 4),
analysis = c(2, NA, 1,3),
diskrete.math = c(3,NA,2,4),
)
student1 <- tibble(
student = c("Adam","Bernd","Christian","Doris"),
algebra = c(NA, 5, 3, 4),
analysis = c(2, NA, 1,3),
diskrete.math = c(3,NA,2,4),
)
library("tibble")
student1 <- tibble(
student = c("Adam","Bernd","Christian","Doris"),
algebra = c(NA, 5, 3, 4),
analysis = c(2, NA, 1,3),
diskrete.math = c(3,NA,2,4),
)
student2 <- tibble(
name = rep(c("Adam", "Bernd", "Christian", "Doris"), each = 2),
type = rep(c("height", "weight"), 4),
measure = c(1.83, 81, 1.75, 71, 1.69, 55, 1.57, 62)
)
student3 <- tibble(
name = c("Adam", "Bernd", "Christian", "Doris"),
ratio = c("81/1.83", "71/1.75", "55/1.69", "62/1.57")
)
student1
View(student2)
View(student1)
View(student2)
View(student3)
View(student2)
student2
View(student1)
View(student1)
View(student1)
student1 <- student1 %>%
add_row(student = "Adam", subject = "Algebra", score = NA) %>%
add_row(student = "Adam", subject = "Analysis", score = 2) %>%
add_row(student = "Adam", subject = "Diskrete Mathematik", score = 3) %>%
add_row(student = "Bernd", subject = "Algebra", score = 5) %>%
add_row(student = "Bernd", subject = "Analysis", score = NA) %>%
add_row(student = "Bernd", subject = "Diskrete Mathematik", score = NA) %>%
add_row(student = "Christian", subject = "Algebra", score = 3) %>%
add_row(student = "Christian", subject = "Analysis", score = 1) %>%
add_row(student = "Christian", subject = "Diskrete Mathematik", score = 2) %>%
add_row(student = "Doris", subject = "Algebra", score = 4) %>%
add_row(student = "Doris", subject = "Analysis", score = 3) %>%
add_row(student = "Doris", subject = "Diskrete Mathematik", score = 4)
student1 <- tibble(
student1 <- tibble(student = character(), subject = character(), score = double())
)
student1 <- student1 %>%
add_row(student = "Adam", subject = "Algebra", score = NA) %>%
add_row(student = "Adam", subject = "Analysis", score = 2) %>%
add_row(student = "Adam", subject = "Diskrete Mathematik", score = 3) %>%
add_row(student = "Bernd", subject = "Algebra", score = 5) %>%
add_row(student = "Bernd", subject = "Analysis", score = NA) %>%
add_row(student = "Bernd", subject = "Diskrete Mathematik", score = NA) %>%
add_row(student = "Christian", subject = "Algebra", score = 3) %>%
add_row(student = "Christian", subject = "Analysis", score = 1) %>%
add_row(student = "Christian", subject = "Diskrete Mathematik", score = 2) %>%
add_row(student = "Doris", subject = "Algebra", score = 4) %>%
add_row(student = "Doris", subject = "Analysis", score = 3) %>%
add_row(student = "Doris", subject = "Diskrete Mathematik", score = 4)
View(student1)
print(student1)
head(student1)
student2 <- tibble(
name = rep(c("Adam", "Bernd", "Christian", "Doris"), each = 2),
type = rep(c("height", "weight"), 4),
measure = c(1.83, 81, 1.75, 71, 1.69, 55, 1.57, 62)
)
View(student2)
View(student2)
#Datensatz "student2" ist nicht tidy, da in der Spalte "type" mehrere Variablen auffinden
#So wuerde der Datensatz in tidy aussehen:
student2 <- tibble(name = char(), height = double(), weight = double())
#Datensatz "student2" ist nicht tidy, da in der Spalte "type" mehrere Variablen auffinden
#So wuerde der Datensatz in tidy aussehen:
student2 <- tibble(name = character(), height = double(), weight = double())
student2 <- tibble(
name = rep(c("Adam", "Bernd", "Christian", "Doris"), each = 2),
type = rep(c("height", "weight"), 4),
measure = c(1.83, 81, 1.75, 71, 1.69, 55, 1.57, 62)
)
View(student2)
#Datensatz "student1" ist nicht tidy da ein und dieselbe Variable in mehreren Spalten vorkommt
#So wuerde der Datensatz in tidy aussehen:
student1 <- tibble(student = character(), subject = character(), score = double())
View(student1)
student1 <- student1 %>%
add_row(student = "Adam", subject = "Algebra", score = NA) %>%
add_row(student = "Adam", subject = "Analysis", score = 2) %>%
add_row(student = "Adam", subject = "Diskrete Mathematik", score = 3) %>%
add_row(student = "Bernd", subject = "Algebra", score = 5) %>%
add_row(student = "Bernd", subject = "Analysis", score = NA) %>%
add_row(student = "Bernd", subject = "Diskrete Mathematik", score = NA) %>%
add_row(student = "Christian", subject = "Algebra", score = 3) %>%
add_row(student = "Christian", subject = "Analysis", score = 1) %>%
add_row(student = "Christian", subject = "Diskrete Mathematik", score = 2) %>%
add_row(student = "Doris", subject = "Algebra", score = 4) %>%
add_row(student = "Doris", subject = "Analysis", score = 3) %>%
add_row(student = "Doris", subject = "Diskrete Mathematik", score = 4)
print(student1)
student2 <- tibble(name = character(), height = double(), weight = double())
student2 <- student2 %>%
add_row(name = "Adam", height = 1.83, weight = 81) %>%
add_row(name = "Bernd", height = 1.75, weight = 71)
print(student2)
View(student2)
student2 <- tibble(name = character(), height = double(), weight = double())
student2 <- student2 %>%
add_row(name = "Adam", height = 1.83, weight = 81) %>%
add_row(name = "Bernd", height = 1.75, weight = 71) %>%
add_row(name = "Christian", height = 1.65, weight = 55) %>%
add_row(name = "Doris", height = 1.57, weight = 62)
print(student2)
View(student2)
student3 <- tibble(
name = c("Adam", "Bernd", "Christian", "Doris"),
ratio = c("81/1.83", "71/1.75", "55/1.69", "62/1.57")
)
View(student3)
#Aufgabe 2
#Calculate the value of sin(log(√
result <- sin(log(sqrt(5 + 3)))
#Define a vector v with values 0.5,1,1.5,...,5 and calculate the by 2
#digits rounded sum of the logarithms of the squared values of v
#with nested operations and using the %>% operator.
vector <- seq(from=0.5, to=5, by=0.5)
result_nested <- sum(round(log(v^2), 2))
result_nested <- sum(round(log(vector^2), 2))
vector <- seq(from=0.5, to=5, by=0.5)
result_nested <- sum(round(log(vector^2), 2))
result_pipe <- vector %>%
'^'(2) %>%
log() %>%
round(2) %>%
sum()
#Aufgabe 3
df <- tibble(id = 1:10, sex = sample(x = c("f", "m"), size = 10, replace = TRUE, age = round(runif(n = 10, min = 20, max = 35)), score = round(runif(n = 10, min = 0, max = 25))))
library("tidyr")
library("tidyverse")
df <- tibble(id = 1:10,
sex = sample(x = c("f", "m")),
size = 10, replace = TRUE,
age = round(runif(n = 10, min = 20, max = 35)),
score1 = round(runif(n = 10, min = 0, max = 25)))
df <- tibble(id = 1:10,
sex = sample(x = c("f", "m")),
size = 10, replace = TRUE,
age = round(runif(n = 10, min = 20, max = 35)),
score1 = round(runif(n = 10, min = 0, max = 25)))
df <- tibble(id = 1:10,
sex = sample(x = c("f", "m"), size = 10, replace = TRUE),
age = round(runif(n = 10, min = 20, max = 35)),
score1 = round(runif(n = 10, min = 0, max = 25)))
selected_data <- df %>% filter(sex == "m")
View(selected_data)
df <- df %>%
add_row(id = 11, sex = "m", age = 25, score1 = 4)
View(df)
library("tidyverse")
df <- df %>%
add_column(score2 = sample(x, size = 10, replace = TRUE))
df <- df %>%
add_column(score2 = sample(0:25, size = 10, replace = TRUE))
df <- df %>%
add_column(.data, score2 = sample(0:25, size = 10, replace = TRUE))
df <- df %>%
mutate(score2 = sample(0:25, size = 10, replace = TRUE),
score3 = sample(0:25, size = 10, replace = TRUE))
df <- tibble(id = 1:10,
sex = sample(x = c("f", "m"), size = 10, replace = TRUE),
age = round(runif(n = 10, min = 20, max = 35)),
score1 = round(runif(n = 10, min = 0, max = 25))
df <- tibble(id = 1:10,
df <- tibble(id = 1:10,
sex = sample(x = c("f", "m"), size = 10, replace = TRUE),
age = round(runif(n = 10, min = 20, max = 35)),
score1 = round(runif(n = 10, min = 0, max = 25))
)
View(df)
View(df)
df <- df %>%
add_row(id = 11, sex = "m", age = 25, score1 = 4)
View(df)
df <- df %>% mutate(score2 = sample(0:25, size = 10, replace = TRUE),
score3 = sample(0:25, size = 10, replace = TRUE))
library("dplyr")
df <- df %>% mutate(score2 = sample(0:25, size = 10, replace = TRUE),
score3 = sample(0:25, size = 10, replace = TRUE))
print(student3)
df <- df %>% mutate(score2 = sample(0:25, size = 11, replace = TRUE),
score3 = sample(0:25, size = 11, replace = TRUE))
View(df)
