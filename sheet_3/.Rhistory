ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
boxplot(value ~ player_type, data = tidy_tibble_of_data)
boxplot(player_type ~ value, data = tidy_tibble_of_data)
boxplot(player_type ~ value, data = tidy_tibble_of_data)
boxplot(value ~ player_type, data = tidy_tibble_of_data)
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
# solution with ggplot()
# changing the order in the side by side boxplots by adding a factor to type
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
data1$type
er", "beginner","tournament"))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions")
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values")
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions")
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type))
#simple Boxplot with boxplot()
boxplot(value ~ player_type, data = tidy_tibble_of_data)
ggplot(data = data1)
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type))
# Boxplots with ggplot
boxplot(res ~ type, data = data1)
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
# solution with ggplot()
# changing the order in the side by side boxplots by adding a factor to type
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
ggplot(data = data)
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
ggplot(data = tidy_tibble_of_data)
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
measures <- data1 %>%
group_by(type) %>%
summarise(Min = min(res),Max=max(res),
q1=quantile(res,0.25,type=1),q2=quantile(res,0.5,type=1),
q3=quantile(res,0.75,type=1),
Mean=mean(res),variance=var(res),
interquartile_range=q3-q1)
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
tidy_tibble_of_data <- tibble(row_id = rep(1:10,3),
player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
ggplot(data = tidy_tibble_of_data)
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
library("ggplot2")
ggplot(data = tidy_tibble_of_data)
tidy_tibble_of_data <- tibble(player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
ggplot(data = tidy_tibble_of_data)
tidy_tibble_of_data <- tibble(player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
ggplot(data = tidy_tibble_of_data)
ggplot(data = data1)
ggplot(data = data1)
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
ggplot(data = data1)
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
tidy_tibble_of_data <- tibble(player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
ggplot(data = tidy_tibble_of_data)
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
View(data1)
View(tidy_tibble_of_data)
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
ggplot(data = data1)
ggplot(data = data1)
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
ggplot(data = data1)
ggplot(data = data1)
ggplot(data = data1)
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
ggplot(data = data1)
# Boxplots with ggplot
boxplot(res ~ type, data = data1)
ggplot(data = data1)
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
#Boxplot with ggplot
ggplot(data = tidy_tibble_of_data)
#Boxplot with ggplot
ggplot(data = tidy_tibble_of_data)
tidy_tibble_of_data <- tibble(row_id = rep(1:10,3),
player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
messy_tibble_of_data <- spread(tidy_tibble_of_data, key = player_type, value = value)
measures <- tidy_tibble_of_data %>%
group_by(player_type) %>%
summarise(min = min(value),
max = max(value),
mean = mean(value),
median = median(value),
var = var(value),
q1 = quantile(value, 0.25, type = 1),
q2 = quantile(value, 0.50, type = 1),
q3 = quantile(value, 0.75, type = 1),
interquartile_range = q3 - q1)
#Boxplot with ggplot
ggplot(data = tidy_tibble_of_data)
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type))
data1$type <- factor(data1$type, levels = c("non-player", "beginner","tournament"))
ggplot(data = data1) +
geom_boxplot(mapping = aes(x=type, y=res, group = type)) +
geom_point(mapping = aes(x=type,y=res,group=type)) +
xlab("player type") +
ylab("rem. chess positions") +
ggtitle("side by side boxplots with marked values") +
theme_bw()
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type))
ggplot(data = tidy_tibble_of_data,
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)),
geom_point(mapping = aes(x = player_type, y = value, group = player_type)))
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
labs(title = NA,
x = NA,
y = NA)
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
labs(title = NA,
x = na,
y = NA)
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
labs(title = "",
x = "",
y = "")
other_x_axis_boundaries <- c(10:100)
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
labs(title = "",
x = "",
y = "") +
axis(1,at = other_x_axis_boundaries)
other_x_axis_boundaries <- c(10:100)
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
labs(title = "",
x = "",
y = "")
axis(1,at = other_x_axis_boundaries)
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
labs(title = "",
x = "",
y = "")
axis(1,at = other_x_axis_boundaries)
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
ylim(0:100) +
labs(title = "",
x = "",
y = "")
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
ylim(0,100) +
labs(title = "",
x = "",
y = "")
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
scale_y_continuous(breaks = seq(0, 100, by = 10)) +
labs(title = "",
x = "",
y = "")
ggplot(data = tidy_tibble_of_data) +
geom_boxplot(mapping = aes(x = player_type, y = value, group = player_type)) +
geom_point(mapping = aes(x = player_type, y = value, group = player_type)) +
scale_y_continuous(breaks = seq(0, 100, by = 10)) +
labs(title = "",
x = "",
y = "")
#simple Boxplot with boxplot()
boxplot(value ~ player_type, data = tidy_tibble_of_data)
hikes <-  tibble(year = seq(1,10,1),
distance = c(12.5, 29.9, 14.8, 18.7, 7.6, 16.2, 16.5, 27.4, 12.1, 17.5),
altitude = c(342, 1245, 502, 555, 398, 670, 796, 912, 238, 466))
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
hikes <-  tibble(year = seq(1,10,1),
distance = c(12.5, 29.9, 14.8, 18.7, 7.6, 16.2, 16.5, 27.4, 12.1, 17.5),
altitude = c(342, 1245, 502, 555, 398, 670, 796, 912, 238, 466))
View(hikes)
hikes <-  tibble(year = seq(1,10,1),
distance = c(12.5, 29.9, 14.8, 18.7, 7.6, 16.2, 16.5, 27.4, 12.1, 17.5),
altitude = c(342, 1245, 502, 555, 398, 670, 796, 912, 238, 466))
hikes <-  tibble(year = seq(1,10,1),
distance = c(12.5, 29.9, 14.8, 18.7, 7.6, 16.2, 16.5, 27.4, 12.1, 17.5),
altitude = c(342, 1245, 502, 555, 398, 670, 796, 912, 238, 466))
measures <- tibble(mean_distance = mean(hikes$distance),
mean_altitude = mean(hikes$altitude),
median_distance = median(hikes$altitude),
median_altitude = median(hikes$altitude),
q1_dist = quantile(sort(hikes$distance), 0.25, type = 1),
q2_dist = quantile(sort(hikes$distance), 0.50, type = 1),
q3_dist = quantile(sort(hikes$distance), 0.75, type = 1),
interquartile_dist = q3_dist - q1_dist,
sd_dist = sd(hikes$distance),
q1_alt = quantile(sort(hikes$altitude), 0.25, type = 1),
q2_alt = quantile(sort(hikes$altitude), 0.50, type = 1),
q3_alt = quantile(sort(hikes$altitude), 0.75, type = 1),
interquartile = q3_alt - q1_alt,
sd_dist = sd(hikes$altitude))
measures <- tibble(mean_dist = mean(hikes$distance),
median_dist = median(hikes$altitude),
q1_dist = quantile(sort(hikes$distance), 0.25, type = 1),
q2_dist = quantile(sort(hikes$distance), 0.50, type = 1),
q3_dist = quantile(sort(hikes$distance), 0.75, type = 1),
interquartile_dist = q3_dist - q1_dist,
sd_dist = sd(hikes$distance),
mean_alt = mean(hikes$altitude),
median_alt = median(hikes$altitude),
q1_alt = quantile(sort(hikes$altitude), 0.25, type = 1),
q2_alt = quantile(sort(hikes$altitude), 0.50, type = 1),
q3_alt = quantile(sort(hikes$altitude), 0.75, type = 1),
interquartile_alt = q3_alt - q1_alt,
sd_alt = sd(hikes$altitude))
View(hikes)
View(measures)
hikes <-  tibble(year = seq(1,10,1),
distance = c(12.5, 29.9, 14.8, 18.7, 7.6, 16.2, 16.5, 27.4, 12.1, 17.5),
altitude = c(342, 1245, 502, 555, 398, 670, 796, 912, 238, 466))
measures <- tibble(mean_dist = mean(hikes$distance),
median_dist = median(hikes$altitude),
q1_dist = quantile(sort(hikes$distance), 0.25, type = 1),
q2_dist = quantile(sort(hikes$distance), 0.50, type = 1),
q3_dist = quantile(sort(hikes$distance), 0.75, type = 1),
interquartile_dist = q3_dist - q1_dist,
sd_dist = sd(hikes$distance),
mean_alt = mean(hikes$altitude),
median_alt = median(hikes$altitude),
q1_alt = quantile(sort(hikes$altitude), 0.25, type = 1),
q2_alt = quantile(sort(hikes$altitude), 0.50, type = 1),
q3_alt = quantile(sort(hikes$altitude), 0.75, type = 1),
interquartile_alt = q3_alt - q1_alt,
sd_alt = sd(hikes$altitude))
hikes <-  tibble(year = seq(1,10,1),
distance = c(12.5, 29.9, 14.8, 18.7, 7.6, 16.2, 16.5, 27.4, 12.1, 17.5),
altitude = c(342, 1245, 502, 555, 398, 670, 796, 912, 238, 466))
measures <- tibble(mean_dist = mean(hikes$distance),
median_dist = median(hikes$altitude),
q1_dist = quantile(sort(hikes$distance), 0.25, type = 1),
q2_dist = quantile(sort(hikes$distance), 0.50, type = 1),
q3_dist = quantile(sort(hikes$distance), 0.75, type = 1),
interquartile_dist = q3_dist - q1_dist,
sd_dist = sd(hikes$distance),
var_dist = var(hikes$distance),
mean_alt = mean(hikes$altitude),
median_alt = median(hikes$altitude),
q1_alt = quantile(sort(hikes$altitude), 0.25, type = 1),
q2_alt = quantile(sort(hikes$altitude), 0.50, type = 1),
q3_alt = quantile(sort(hikes$altitude), 0.75, type = 1),
interquartile_alt = q3_alt - q1_alt,
sd_alt = sd(hikes$altitude),
var_alt = var(hikes$altitude))
View(hikes)
View(measures)
distance <- c(12.5,29.9,14.8,18.7,7.6,16.2,16.5,27.4,12.1,17.5)
altitude <- c(342,1245,502,555,398,670,796,912,238,466)
# sorted data
sort(distance)
sort(altitude)
# mean and median
mean(distance)
mean(altitude)
# R offers several ways of calculating quantiles. Use type=1
# to apply the method we have introduced.
quantile(distance,probs = c(0.25,0.5,0.75),type=1)
quantile(altitude,probs = c(0.25,0.5,0.75),type=1)
# interquartial range
quantile(distance,probs=0.75,type=1)- quantile(distance,probs=0.25,type=1)
quantile(altitude,probs=0.75,type=1)- quantile(altitude,probs=0.25,type=1)
distance <- c(12.5,29.9,14.8,18.7,7.6,16.2,16.5,27.4,12.1,17.5)
altitude <- c(342,1245,502,555,398,670,796,912,238,466)
# sorted data
sort_dist <- sort(distance)
sort_alt <- sort(altitude)
# mean and median
mean_dist <- mean(distance)
mean_alt <- mean(altitude)
# R offers several ways of calculating quantiles. Use type=1
# to apply the method we have introduced.
quantiles_dist <- quantile(distance,probs = c(0.25,0.5,0.75),type=1)
quantiles_alt <- quantile(altitude,probs = c(0.25,0.5,0.75),type=1)
# interquartial range
interquartile_dist <- quantile(distance,probs=0.75,type=1)- quantile(distance,probs=0.25,type=1)
interquartile_alt <- quantile(altitude,probs=0.75,type=1)- quantile(altitude,probs=0.25,type=1)
# shape of the distributions
# distance: Q2 closer to Q3, i.e. distance might be left skewed
# altitude: Q2 closer to Q1, i.e. distance might be right skewed
boxplot(altitude, main = "altitude", xlab="altitude")
boxplot(distance, main = "distance", xlab="distance")
boxplot(altitude, distance,
main = "altitude and distance",
names = c("distance", "altitude"))
var_dist <- var(distance)
var_alt <- var(altitude)
sd_dist <- sd(distance)
sd_alt <- sd(altitude)
distance
# make the values comparable
distance.norm <- distance/mean(distance)
distance.norm
altitude.norm <- altitude/mean(altitude)
altitude.norm
boxplot(altitude.norm, distance.norm,
main = "altitude and distance - normed",
names = c("distance.norm", "altitude.norm"))
#Aufgabe2.8
?mpg()
mpg
mpg_data <- mpg
View(mpg_data)
df <- mpg_data %>%
tibble() %>%
select(displ, hwy)
View(df)
df <- mpg_data %>%
tibble() %>%
select(displ, hwy) %>%
mutate(displ_class = cut(x = displ,
breaks = c(1, 3, 5, 8),
labels = c("niedrig", "mittel", "groß"),
include.lowest = TRUE))
View(df)
?mpg()
mpg_data <- mpg
#(b)
df <- mpg_data %>%
tibble() %>%
select(displ, hwy)
View(df)
df <- mpg_data %>%
tibble() %>%
select(displ, hwy) %>%
mutate(displ_class = cut(x = displ,
breaks = c(1, 3, 5, 8),
labels = c("niedrig", "mittel", "gross"),
include.lowest = TRUE))
View(df)
tab <-
mpg %>%
select(displ,hwy) %>%
mutate(displ_class =
cut(displ,breaks = c(1,3,5,8),
labels = c("small","medium","big"))
)
tab
View(tab)
stat_hwy_displ <-
tab %>%
group_by(displ) %>%
summarise(mean=mean(hwy),min=min(hwy),max=max(hwy),
q1=quantile(hwy,0.25, type=1),
q2=quantile(hwy,0.5, type=1),
q3=quantile(hwy,0.75, type=1),
nobs = n()
)
stat_hwy_displ
View(stat_hwy_displ)
View(stat_hwy_displ)
