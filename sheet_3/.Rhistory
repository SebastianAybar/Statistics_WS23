replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
points(y = seq(0,1,0.05),x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <- 10
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(s.size-1)/(s.size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
sample_size <- 50
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(s.size-1)/(s.size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
sample_size <- 10
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(s.size-1)/(s.size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05),x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <- 50
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(s.size-1)/(s.size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
sample_size <- 100
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
points(y = seq(0,1,0.05),x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <-  50
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(s.size-1)/(s.size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
sample_size <- 50
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
points(y = seq(0,1,0.05),x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <- 10
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(s.size-1)/(s.size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <- 50
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(s.size-1)/(s.size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
sample_size <- 10
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <- 100
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <-5
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <-50
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <-5
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <-10
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <-10
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
sample_size <-10
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
sample_size <-10
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
sample_size <-10
sorted_random_sample <- sort(sample(x = seq(1,20,1),
size = sample_size,
replace = TRUE))
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlab = NA,
ylab = NA,
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
ecdf_data <- ecdf(tibble_sample$obs)
plot(ecdf_data)
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
plot(x = sorted_random_sample,
y = 0:(sample_size-1)/(sample_size-1),
type = "b",
sub = "black = type 7, blue = type 1",
main = "comparison type 1 and type 7 quantile",
xlim=c(0,22),
ylim=c(-0.1,1.1))
other_x_axis_boundaries <- c(0:22)
axis(1,at = other_x_axis_boundaries)
#Punkte des type 1 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05), type = 1), col = "blue")
#Punkte des type 7 Quantiles
points(y = seq(0,1,0.05), x = quantile(sorted_random_sample, probs = seq(0,1,0.05)), col = "red")
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
data1
data %>%
as_tibble() %>%
gather(key = "type", value = "res")
data1 %>%
as_tibble() %>%
gather(key = "type", value = "res")
data1
View(data1)
tidy_tibble_of_data <- tibble(player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
View(tidy_tibble_of_data)
messy_tibble_of_data <- tidy_tibble_of_data %>% spread(key = player_type, value = value)
lang <- tibble(
category = c("A", "A", "B", "B"),
measurement = c("measurement_1", "measurement_2", "measurement_1", "measurement_2"),
value = c(10, 15, 20, 25)
)
lang
View(lang)
tidy_tibble_of_data <- tibble(player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
messy_tibble_of_data <- tidy_tibble_of_data %>% spread(key = player_type, value = value)
lang <- tibble(
category = c("A", "A", "B", "B"),
measurement = c("measurement_1", "measurement_2", "measurement_1", "measurement_2"),
value = c(10, 15, 20, 25)
)
breite_form <- spread(lang, key = measurement, value = value)
View(breite_form)
tidy_tibble_of_data <- tibble(player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
messy_tibble_of_data <- tidy_tibble_of_data %>% spread(key = player_type, value = value)
messy_tibble_of_data <- spread(tidy_tibble_of_data, key = player_type, value = value)
rlang::last_trace()
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
data1
# alternative: tidy the messy dataset data
data1 %>%
as_tibble() %>%
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
data1
# alternative: tidy the messy dataset data
data %>%
as_tibble() %>%
gather(key = "type", value = "res")
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
data1 %>%
as_tibble() %>%
gather(key = "type", value = "res")
View(data1)
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
# alternative: tidy the messy dataset data
data1 %>%
as_tibble() %>%
gather(key = "type", value = "res")
View(data1)
data1 <- tibble(
type = c(rep("non-player",10), rep("beginner",10),rep("tournament",10)),
res = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
View(data1)
tidy_tibble_of_data <- tibble(row_id = 1:30,
player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
messy_tibble_of_data <- spread(tidy_tibble_of_data, key = player_type, value = value)
View(messy_tibble_of_data)
tidy_tibble_of_data <- tibble(row_id = 1:30,
player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
View(tidy_tibble_of_data)
messy_tibble_of_data <- spread(tidy_tibble_of_data, key = player_type, value = value)
View(messy_tibble_of_data)
tidy_tibble_of_data <- tibble(row_id = rep(1:10), 3,
player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
tidy_tibble_of_data <- tibble(row_id = rep(1:10,3),
player_type = c(rep("non-player", 10), rep("beginner", 10), rep("tournament", 10)),
value = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2,
32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7,
40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
View(tidy_tibble_of_data)
messy_tibble_of_data <- spread(tidy_tibble_of_data, key = player_type, value = value)
View(messy_tibble_of_data)
data <- tibble(non_player = c(22.1,22.3,26.2,29.6,31.7,33.5,38.9,39.7,43.2,43.2),
beginer = c(32.5,37.1,39.1,40.5,45.5,51.3,52.6,55.7,55.9,57.7),
tournament = c(40.1,45.6,51.2,56.4,58.1,71.1,74.9,75.9,80.3,85.3))
View(data)
#Compare the performance for each group by computing mean, median,
#min, max, quartiles, interquartile range, variance. Create side-by-side
#box plots for these three groups. What can you say about the differences between these groups from the box plots?
measures <- tidy_tibble_of_data %>%
group_by(player_type) %>%
summarise(min = min(value))
#Compare the performance for each group by computing mean, median,
#min, max, quartiles, interquartile range, variance. Create side-by-side
#box plots for these three groups. What can you say about the differences between these groups from the box plots?
measures <- tidy_tibble_of_data %>%
group_by(player_type) %>%
summarise(min = min(value),
max = max(value),
mean = mean(value))
measures <- tidy_tibble_of_data %>%
group_by(player_type) %>%
summarise(min = min(value),
max = max(value),
mean = mean(value),
median = median(value)
var = var(value))
measures <- tidy_tibble_of_data %>%
group_by(player_type) %>%
summarise(min = min(value),
max = max(value),
mean = mean(value),
median = median(value),
var = var(value))
measures <- tidy_tibble_of_data %>%
group_by(player_type) %>%
summarise(min = min(value),
max = max(value),
mean = mean(value),
median = median(value),
var = var(value))
View(measures)
measures <- tidy_tibble_of_data %>%
group_by(player_type) %>%
summarise(min = min(value),
max = max(value),
mean = mean(value),
median = median(value),
var = var(value),
q1 = quantile(value, 0.25, type = 1))
View(measures)
measures <- tidy_tibble_of_data %>%
group_by(player_type) %>%
summarise(min = min(value),
max = max(value),
mean = mean(value),
median = median(value),
var = var(value),
q1 = quantile(value, 0.25, type = 1),
q2 = quantile(value, 0.50, type = 1),
q3 = quantile(value, 0.75, type = 1),
interquartile_range = q3 - q1)
View(measures)
