cum_sum <- cumsum(vector)
vector <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
cum_sum <- cumsum(vector)
table_cum_sum <- table(cum_sum)
table_cum_sum
plot(names(table_cum_sum), table_cum_sum)
vector <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
cum_sum <- cumsum(vector)
table_cum_sum <- table(cum_sum)
plot(names(table_cum_sum), table_cum_sum)
data <- c(1, 2, 2, 3, 3, 3, 4, 4, 5, 6)
# Erstelle die ECDF
ecdf_data <- ecdf(data)
# Plotte die ECDF
plot(ecdf_data, main="Empirische kumulative Verteilungsfunktion (ECDF)", xlab="Werte")
data <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
# Erstelle die ECDF
ecdf_data <- ecdf(data)
# Plotte die ECDF
plot(ecdf_data, main="Empirische kumulative Verteilungsfunktion (ECDF)", xlab="Werte")
vector <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
tab <- table(vector)
cum_sum <- cumsum(tab)
plot(names(cum_sum), cum_sum)
vector <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
tab <- table(vector)
cum_sum <- cumsum(tab)
plot(names(cum_sum), cum_sum, type = "s",
main="Empirische kumulative Verteilungsfunktion (ECDF)",
xlab="Werte")
# Beispiel-Vektor erstellen
data <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
# Erstelle die ECDF
ecdf_data <- ecdf(data)
# Plotte die ECDF
plot(ecdf_data, main="Empirische kumulative Verteilungsfunktion (ECDF)", xlab="Werte")
library("tidyverse")
library("tidyr")
library("dplyr")
library("nycflights13")
library("stringr")
production <-
expand_grid(
product = c("A", "B"),
country = c("AI", "EI"),
year = 2000:2014) %>%
filter((product == "A" & country == "AI") | product == "B") %>%
mutate(production = rnorm(nrow(.)))
production_messy <- production %>%
mutate(x = str_c(product, country, sep = "_")) %>%
select(-product, -country) %>%
spread(key = x, value = production)
#Warum funktioniert das aber nicht?
production_messy <- production %>%
mutate(x = str_c(product, country, sep = "_")) %>%
spread(key = x, value = production) %>%
select(-product, -country)
View(production_messy)
production_messy <- production %>%
mutate(x = str_c(product, country, sep = "_")) %>%
select(-product, -country) %>%
spread(key = x, value = production)
#Aufgabe 4
obs <- c(1:8)
#Aufgabe 4
obs <- tibble(Number = c(1:8), abs_freq = c(5, 4, 1, 7, 2, 3, 1, 2))
View(obs)
install.packages("Hmisc")
arith_mean <- mean(data$abs_freq)
arith_mean <- mean(obs$abs_freq)
geom_mean <- geometric.mean(obs$abs_freq)
geom_mean <- geomean(obs$abs_freq)
install.packages("Hmisc")
geom_mean <- geomean(obs$abs_freq)
geom_mean <- geom_mean(obs$abs_freq)
geom_mean <- geometric.mean(obs$abs_freq)
geometric_mean <- exp(mean(log(obs$abs_freq)))
