cum_sum <- cumsum(vector)
vector <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
cum_sum <- cumsum(vector)
table_cum_sum <- table(cum_sum)
table_cum_sum
plot(names(table_cum_sum), table_cum_sum)
vector <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
cum_sum <- cumsum(vector)
table_cum_sum <- table(cum_sum)
plot(names(table_cum_sum), table_cum_sum)
data <- c(1, 2, 2, 3, 3, 3, 4, 4, 5, 6)
# Erstelle die ECDF
ecdf_data <- ecdf(data)
# Plotte die ECDF
plot(ecdf_data, main="Empirische kumulative Verteilungsfunktion (ECDF)", xlab="Werte")
data <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
# Erstelle die ECDF
ecdf_data <- ecdf(data)
# Plotte die ECDF
plot(ecdf_data, main="Empirische kumulative Verteilungsfunktion (ECDF)", xlab="Werte")
vector <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
tab <- table(vector)
cum_sum <- cumsum(tab)
plot(names(cum_sum), cum_sum)
vector <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
tab <- table(vector)
cum_sum <- cumsum(tab)
plot(names(cum_sum), cum_sum, type = "s",
main="Empirische kumulative Verteilungsfunktion (ECDF)",
xlab="Werte")
# Beispiel-Vektor erstellen
data <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
# Erstelle die ECDF
ecdf_data <- ecdf(data)
# Plotte die ECDF
plot(ecdf_data, main="Empirische kumulative Verteilungsfunktion (ECDF)", xlab="Werte")
library("tidyverse")
library("tidyr")
library("dplyr")
library("nycflights13")
library("stringr")
production <-
expand_grid(
product = c("A", "B"),
country = c("AI", "EI"),
year = 2000:2014) %>%
filter((product == "A" & country == "AI") | product == "B") %>%
mutate(production = rnorm(nrow(.)))
production_messy <- production %>%
mutate(x = str_c(product, country, sep = "_")) %>%
select(-product, -country) %>%
spread(key = x, value = production)
#Warum funktioniert das aber nicht?
production_messy <- production %>%
mutate(x = str_c(product, country, sep = "_")) %>%
spread(key = x, value = production) %>%
select(-product, -country)
View(production_messy)
production_messy <- production %>%
mutate(x = str_c(product, country, sep = "_")) %>%
select(-product, -country) %>%
spread(key = x, value = production)
#Aufgabe 4
obs <- c(1:8)
#Aufgabe 4
obs <- tibble(Number = c(1:8), abs_freq = c(5, 4, 1, 7, 2, 3, 1, 2))
View(obs)
install.packages("Hmisc")
arith_mean <- mean(data$abs_freq)
arith_mean <- mean(obs$abs_freq)
geom_mean <- geometric.mean(obs$abs_freq)
geom_mean <- geomean(obs$abs_freq)
install.packages("Hmisc")
geom_mean <- geomean(obs$abs_freq)
geom_mean <- geom_mean(obs$abs_freq)
geom_mean <- geometric.mean(obs$abs_freq)
geometric_mean <- exp(mean(log(obs$abs_freq)))
library("tidyverse")
library("tidyr")
library("dplyr")
library("nycflights13")
#Beispiel-Vektor erstellen
data <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
#Erstelle die ECDF
ecdf_data <- ecdf(data)
ecdf_data()
ecdf_data
#Plotte die ECDF
plot(ecdf_data, main="Empirische kumulative Verteilungsfunktion (ECDF)", xlab="Werte")
data <- tibble(values = c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007),
rel_freq = values / length(values))
View(data)
haeufigkeiten <- table(werte_vector)
werte_vector <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
# Absolute Häufigkeiten berechnen
haeufigkeiten <- table(werte_vector)
df <- tibble(Werte = as.integer(names(haeufigkeiten)),
Absolute_Haeufigkeit = as.integer(haeufigkeiten))
View(df)
haeufigkeiten
#table of rel freq, cum freq and distribution function (ecdf)
values <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
table_values <- table(values)
values <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
table_values <- table(values)
tibble_values <- tibble(Werte = as.integer(names(table_values)),
absolute_Häufigkeit = as.integer(table_values),
relative_Häufigkeit = absolute_Häufigkeit / length(table_values))
View(tibble_values)
values <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
table_values <- table(values)
tibble_values <- tibble(Werte = as.integer(names(table_values)),
absolute_Häufigkeit = as.integer(table_values),
relative_Häufigkeit = absolute_Häufigkeit / length(table_values),
kumulative_Häufigkeit = cumsum(relative_Häufigkeit))
View(tibble_values)
ecdf_data <- ecdf(tibble_values$Werte)
plot(ecdf_data, main = "Empirische kumulative Verteilungsfunktion (ECDF)",
xlab = "Werte",
ylab = "kumulative Häufigkeit")
View(tibble_values)
less_equal_800 <- tibble_values %>% filter(Werte <= 800)
View(less_equal_800)
less_equal_800 <- tibble_values %>%
filter(Werte <= 800) %>%
ecdf() %>%
plot()
View(less_equal_800)
values <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
table_values <- table(values)
tibble_values <- tibble(Werte = as.integer(names(table_values)),
absolute_Häufigkeit = as.integer(table_values),
relative_Häufigkeit = absolute_Häufigkeit / length(table_values),
kumulative_Häufigkeit = cumsum(relative_Häufigkeit))
ecdf_data <- ecdf(tibble_values$Werte)
plot(ecdf_data, main = "Empirische kumulative Verteilungsfunktion (ECDF)",
xlab = "Werte",
ylab = "kumulative Häufigkeit")
less_equal_800 <- tibble_values %>%
filter(Werte <= 800)
View(less_equal_800)
less_equal_800 <- ecdf_data %>% filter(Werte <= 800)
View(less_equal_800)
plot(less_equal_800, main = "Empirische kumulative Verteilungsfunktion (ECDF)",
xlab = "Werte",
ylab = "kumulative Häufigkeit")
plot(less_equal_800, main = "Empirische kumulative Verteilungsfunktion (ECDF)",
xlab = "Werte",
ylab = "kumulative Häufigkeit")
values <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
table_values <- table(values)
tibble_values <- tibble(Werte = as.integer(names(table_values)),
absolute_Häufigkeit = as.integer(table_values),
relative_Häufigkeit = absolute_Häufigkeit / length(table_values),
kumulative_Häufigkeit = cumsum(relative_Häufigkeit))
ecdf_data <- ecdf(tibble_values$Werte)
plot(ecdf_data, main = "Empirische kumulative Verteilungsfunktion (ECDF)",
xlab = "Werte",
ylab = "kumulative Häufigkeit")
less_equal_800 <- ecdf_data %>% filter(Werte <= 800)
values <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
table_values <- table(values)
tibble_values <- tibble(Werte = as.integer(names(table_values)),
absolute_Häufigkeit = as.integer(table_values),
relative_Häufigkeit = absolute_Häufigkeit / length(table_values),
kumulative_Häufigkeit = cumsum(relative_Häufigkeit))
ecdf_data <- ecdf(tibble_values$Werte)
plot(ecdf_data, main = "Empirische kumulative Verteilungsfunktion (ECDF)",
xlab = "Werte",
ylab = "kumulative Häufigkeit")
less_equal_800 <- tibble_values %>%
filter(Werte <= 800)
View(less_equal_800)
less_equal_800 <- tibble_values %>% filter(Werte <= 800)
grater_than_725 <- tibble_values %>% filter(Werte >= 725)
greater_and_less <- tibble_values %>% filter(Werte >= 642 & Werte <= 777)
equal_696 <- tibble_values %>% filter(Werte == 696)
#Compute using the cumulative frequency distribution the proportion of response times
less_equal_800 <- tibble_values %>% filter(Werte <= 800) %>% ecdf()
less_equal_800 <- tibble_values %>% filter(Werte <= 800)
ecdf_less_equal_800 <- ecdf(less_equal_800)
values <- c(568, 577, 581, 640, 641, 645, 657, 673, 696, 703, 720, 728, 729, 777, 808, 824, 825, 865, 875, 1007)
table_values <- table(values)
tibble_values <- tibble(Werte = as.integer(names(table_values)),
absolute_Häufigkeit = as.integer(table_values),
relative_Häufigkeit = absolute_Häufigkeit / length(table_values),
kumulative_Häufigkeit = cumsum(relative_Häufigkeit))
ecdf_data <- ecdf(tibble_values$Werte)
plot(ecdf_data, main = "Empirische kumulative Verteilungsfunktion (ECDF)",
xlab = "Werte",
ylab = "kumulative Häufigkeit")
#Compute using the cumulative frequency distribution the proportion of response times
less_equal_800 <- tibble_values %>% filter(Werte <= 800)
ecdf_less_equal_800 <- ecdf(less_equal_800)
ecdf_less_equal_800 <- ecdf(less_equal_800$Werte)
plot(ecdf_less_equal_800)
