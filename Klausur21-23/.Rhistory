#KLAUSUR WS21/22
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
dataset <- read.csv(path_dataset) %>% as_tibble()
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
View(dataset)
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
View(dataset)
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
View(dataset)
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
View(dataset)
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
View(dataset)
dataset <- dataset %>% mutate(live.status = ifelse(status == 1, "alive", "dead"))
View(dataset)
dataset <- dataset %>% mutate(live.status = ifelse(status == "still alive", "alive", "dead"))
#(d) Create a contingency table for the variables sex and live.status.
contigency_table <- chisq.test(dataset$sex, dataset$live.status)$observed
contigency_table <- chisq.test(dataset$sex, dataset$live.status)$expected
View(contigency_table)
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed %>% addmargins()
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed %>% addmargins()
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected %>% addmargins(
View(contigency_table)
View(contigency_table)
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed %>% addmargins()
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected %>% addmargins()
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
#(c) Change the values of the variables sex, status, ulcer to strings describing their values
#and add a new variable live.status describing whether the patient is alive or dead.
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
#mutate column still.alive
dataset <- dataset %>% mutate(live.status = ifelse(status == "still alive", "alive", "dead"))
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed %>% addmargins()
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected %>% addmargins()
View(contigency_table_expected)
View(contigency_table_observed)
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected %>% addmargins()
View(contigency_table_expected)
View(contigency_table_observed)
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed %>% addmargins()
View(contigency_table_observed)
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed
View(dataset)
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected %>% addmargins()
View(contigency_table_expected)
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
#(c) Change the values of the variables sex, status, ulcer to strings describing their values
#and add a new variable live.status describing whether the patient is alive or dead.
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
#mutate column still.alive
dataset <- dataset %>% mutate(live.status = ifelse(status == "still alive", "alive", "dead"))
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed
contigency_table_observed
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected
View(contigency_table_expected)
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$live.status, dataset$sex)$observed
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$live.status, dataset$sex)$observed %>% addmargins()
View(contigency_table_observed)
#KLAUSUR WS21/22
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
#Aufgabe 1
#(a) Import
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
#(c) Change the values of the variables sex, status, ulcer to strings describing their values
#and add a new variable live.status describing whether the patient is alive or dead.
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
#mutate column still.alive
dataset <- dataset %>% mutate(live.status = ifelse(status == "still alive", "alive", "dead"))
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$live.status, dataset$sex)$observed %>% addmargins()
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected %>% addmargins()
View(contigency_table_observed)
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed %>% addmargins()
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected %>% addmargins()
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/exam_data.csv"
data_set <- read.csv(path_dataset) %>% as_tibble()
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected %>% addmargins()
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed %>% view()
contigency_table_observed
View(contigency_table_observed)
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$statistics
Chi_squared <- chisq.test(dataset$sex, dataset$live.status)$statistic
contigency_table$observed
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
contigency_table$observed
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
observed_values <- contigency_table$observed
expected_values <- contigency_table$expected
View(expected_values)
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
#(c) Change the values of the variables sex, status, ulcer to strings describing their values
#and add a new variable live.status describing whether the patient is alive or dead.
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
#mutate column still.alive
dataset <- dataset %>% mutate(live.status = ifelse(status == "still alive", "alive", "dead"))
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
observed_values <- contigency_table$observed
View(contigency_table)
observed_values
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
observed_values <- contigency_table$observed
observed_values
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
observed_values <- contigency_table$observed
observed_values %>% addmargins()
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
observed_values <- contigency_table$observed
observed_values %>% addmargins()
expected_values <- contigency_table$expected
expected_values %>% addmargins()
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
#(c) Change the values of the variables sex, status, ulcer to strings describing their values
#and add a new variable live.status describing whether the patient is alive or dead.
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
#mutate column still.alive
dataset <- dataset %>% mutate(live.status = ifelse(status == "still alive", "alive", "dead"))
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed %>% addmargins()
View(contigency_table_observed)
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
#(c) Change the values of the variables sex, status, ulcer to strings describing their values
#and add a new variable live.status describing whether the patient is alive or dead.
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
#mutate column still.alive
dataset <- dataset %>% mutate(live.status = ifelse(status == "still alive", "alive", "dead"))
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
observed_values <- contigency_table$observed
observed_values %>% addmargins()
expected_values <- contigency_table$expected
expected_values %>% addmargins()
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
observed_values <- contigency_table$observed
observed_contigency_table <- observed_values %>% addmargins()
expected_values <- contigency_table$expected
expected_contigency_table <- expected_values %>% addmargins()
View(expected_contigency_table)
View(observed_contigency_table)
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur22-23/exam_data.csv"
data_set <- read.csv(path_dataset) %>% as_tibble()
#split the Variable exam into mat.nr and course
tidy_data <- data_set %>%
separate(exam, into = c("mat.nr", "course"), sep = "/")
#add new variable grade
new_variable <- tidy_data %>%
mutate(grade = case_when(score < 50 ~ 5,
score >= 50 & score < 65 ~ 4,
score >= 65 & score < 80 ~ 3,
score >= 80 & score < 90 ~ 2,
score >= 90 ~ 1))
#determine the total number of tests in each exam and number of students participating
total_number_of_tests <- new_variable %>%
group_by(course) %>%
summarise(n = n())
unique_students <- new_variable %>%
group_by(mat.nr) %>%
summarise(n = n())
count(unique_students)
total_number_of_students <- count(unique_students)
#For each subject, determine the absolute frequencies of the grades
#and store the result in a tibble with the variables grade, Computer
#Networks, Data Bases, Formal Languages, Mathematics, OOP and
#Software Engineering.
notenverteilungen <- new_variable %>%
count(course, grade) %>%
spread(key = course, value = n)
#For each subject, determine the minimum, maximum, the three
#quartiles, the mean of the variable score, the number of
#participants and the dropout rates.
measures <- new_variable %>%
group_by(course) %>%
summarise(minimum = min(score),
maximum = max(score),
mean = mean(score),
participants = n(),
q1 = quantile(score, 0.25, type = 1),
q2 = quantile(score, 0.50, type = 1),
q3 = quantile(score, 0.75, type = 1))
dropouts <- new_variable %>%
filter(attempt == 3, grade == 5)
number_of_dropouts_as_tibble <- count(dropouts)
#oder
number_of_dropouts_as_int <- as.integer(count(dropouts))
#bessere Lösung
measures <- new_variable %>%
mutate(dropout = if_else(grade <= 4, 0, 1)) %>%
group_by(course) %>%
summarise(minimum = min(score),
maximum = max(score),
mean = mean(score),
participants = n(),
q1 = quantile(score, 0.25, type = 1),
q2 = quantile(score, 0.50, type = 1),
q3 = quantile(score, 0.75, type = 1),
dropout_rate = sum(dropout)/participants)
# Create side by side boxplots of the score for each subject and
#interpret the results
boxplot(new_variable$score ~ new_variable$course,
data = new_variable,
main = "Side by Side Boxplots",
xlab = "",
ylab = "score")
# Determine the contingency table of the variables attempt
#and grade and determine the indifference table and chi-square value.
contigency_table_observed <- chisq.test(new_variable$attempt, new_variable$grade)$observed %>%
addmargins()
contigency_table_expected <- chisq.test(new_variable$attempt, new_variable$grade)$expected %>%
addmargins()
X_squared <- chisq.test(new_variable$attempt, new_variable$grade)$statistic
View(contigency_table_observed)
View(contigency_table_expected)
View(contigency_table_observed)
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
#(c) Change the values of the variables sex, status, ulcer to strings describing their values
#and add a new variable live.status describing whether the patient is alive or dead.
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
#mutate column still.alive
dataset <- dataset %>% mutate(live.status = ifelse(status == "still alive", "alive", "dead"))
#(d) Create a contingency table for the variables sex and live.status.
contigency_table_observed <- chisq.test(dataset$sex, dataset$live.status)$observed %>% addmargins() #sobald ich observed in variable packen will klappts nicht
contigency_table_expected <- chisq.test(dataset$sex, dataset$live.status)$expected %>% addmargins()
Chi_squared <- chisq.test(dataset$sex, dataset$live.status)$statistic
#So klappts alternativ
contigency_table <- chisq.test(dataset$sex, dataset$live.status)
observed_values <- contigency_table$observed
observed_values %>% addmargins()
expected_values <- contigency_table$expected
expected_values %>% addmargins()
View(dataset)
n_survive_min_3_years <- length(dataset$time >= 1095)
n_survive_min_3_years
dataset <- dataset %>%
mutate(lived.longer.than.3.years = ifelse(time >= 1095, 1, 0))
risk_to_survive <- dataset %>%
group_by(sex) %>%
summarise(rel_risk_to_survive_min_3_years = sum(lived.longer.than.3.years) / length(dataset))
View(risk_to_survive)
risk_to_survive <- dataset %>%
group_by(sex) %>%
summarise(rel_risk_to_survive_min_3_years = round(sum(lived.longer.than.3.years) / length(dataset)))
View(risk_to_survive)
risk_to_survive <- dataset %>%
group_by(sex) %>%
summarise(rel_risk_to_survive_min_3_years = round(sum(lived.longer.than.3.years) / length(dataset), 2
risk_to_survive <- dataset %>%
View(risk_to_survive)
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
#(c) Change the values of the variables sex, status, ulcer to strings describing their values
#and add a new variable live.status describing whether the patient is alive or dead.
dataset$sex <- ifelse(dataset$sex == 1, "male", "female")
dataset$status <- case_when(dataset$status == 1 ~ "died from melanoma",
dataset$status == 2 ~ "still alive",
dataset$status == 3 ~ "died unrelated to melanoma")
dataset$ulcer <- ifelse(dataset$ulcer == 1, "present", "absent")
#mutate column still.alive
dataset <- dataset %>% mutate(live.status = ifelse(status == "still alive", "alive", "dead"))
dataset <- dataset %>%
mutate(lived.longer.than.3.years = ifelse(time >= 1095, 1, 0))
risk_to_survive <- dataset %>%
group_by(sex) %>%
summarise(rel_risk_to_survive_min_3_years = round(sum(lived.longer.than.3.years) / length(dataset), 2))
View(risk_to_survive)
risk_to_survive <- dataset %>%
group_by(sex) %>%
summarise(rel_risk_to_survive_min_3_years = round(sum(lived.longer.than.3.years) / length(dataset), 2) + "%")
risk_to_survive <- dataset %>%
group_by(sex) %>%
summarise(rel_risk_to_survive_min_3_years = (round(sum(lived.longer.than.3.years) / length(dataset), 2)) + "%")
age_measures <- dataset %>%
group_by(sex) %>%
summarise(mean = mean(age),
min = min(age),
max = max(age),
q1 = quantile(age, 0.25, type = 1),
q2 = quantile(age, 0.50, type = 1),
q3 = quantile(age, 0.75, type = 1))
View(age_measures)
boxplot(dataset$age ~ dataset$sex,
data = dataset,
main = "Side by Side Boxplots",
xlab = "",
ylab = "score")
elanoma.
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/add.melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
#Import the dataset as a tibble called add.data.melanoma.
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/add.data.melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
View(dataset)
View(dataset)
path_dataset <- "C:/Users/sebas/OneDrive/Dokumente/GitHub/Statistics_WS23/Klausur21-23/add.data.melanoma.csv"
dataset <- read.csv(path_dataset) %>% as_tibble()
dataset <- dataset %>% separate(sex_age_year, into = c("sex", "age", "year"), sep = "/")
View(dataset)
