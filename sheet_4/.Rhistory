tidy_data <- tibble(data_1 = rnorm(5,mean = 10,sd = 2),
data_2 = rnorm(5,mean = 10,sd = 2))
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
tidy_data <- tibble(data_1 = rnorm(5,mean = 10,sd = 2),
data_2 = rnorm(5,mean = 10,sd = 2))
mean_data_1 <- mean(tidy_data$data_1)
sd_data_1 <- sd(tidy_data$data_1)
View(tidy_data)
#Aufgabe 1.1.
x <- c(2, 6, 3, 4, 5)
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
#Aufgabe 1.1.
x <- c(2, 6, 3, 4, 5)
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y)
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y,
xlim = seq(0,10,1),
ylim = seq(0,10,1))
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y,
xlim = c(seq(0,10,1)),
ylim = c(seq(0,10,1)))
print(covariance)
covariance <- cov(x,y)
print(covariance)
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
covariance <- cov(x,y)
print(covariance)
#(b)  coefficient of correlation
sd_x <- sd(x)
#sheet 4
library("tidyverse")
library("tidyr")
library("dplyr")
library("ggplot2")
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
sd_x <- sd(x)
sd_y <- sd(y)
var_x <- var(x)
var_y <- var(y)
coef_cor <- covariance/(sd_x * sd_y)
#(a) covariance
covariance <- cov(x,y)
coef_cor <- covariance/(sd_x * sd_y)
coef_cor <- cor(x,y)
coef_cor <- covariance/(sd_x * sd_y)
#regression line: criterion variable Y and predictor variable X
df_for_lm <- df(x = , y = y)
#regression line: criterion variable Y and predictor variable X
df_for_lm <- df(x = x, y = y)
#regression line: criterion variable Y and predictor variable X
df_for_lm <- data.frame(x = x, y = y)
linear_regression <- lm(y ~ x, data = df_for_lm)
View(linear_regression)
summary(linear_regression)
df_for_lm <- data.frame(x = x, y = y)
linear_regression <- lm(y ~ x, data = df_for_lm)
summary(linear_regression)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
abline(linear_regression)
linear_regression <- lm(x ~ y, data = df_for_lm)
summary(linear_regression)
plot(x = y, y = x,
xlim = c(0,10),
ylim = c(0,10))
abline(linear_regression)
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
covariance <- cov(x,y)
#(b)  coefficient of correlation
sd_x <- sd(x)
sd_y <- sd(y)
var_x <- var(x)
var_y <- var(y)
coef_cor <- covariance/(sd_x * sd_y)
linear_regression <- lm(y ~ x)
View(linear_regression)
View(linear_regression)
summary(linear_regression)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
abline(linear_regression)
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
#(a) covariance
covariance <- cov(x,y)
#(b)  coefficient of correlation
sd_x <- sd(x)
sd_y <- sd(y)
var_x <- var(x)
var_y <- var(y)
coef_cor <- covariance/(sd_x * sd_y)
#Funktion aus R
coef_cor <- cor(x,y)
#regression line: criterion variable Y and predictor variable X
linear_regression <- lm(y ~ x)
summary(linear_regression)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
abline(linear_regression)
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
#(a) covariance
covariance <- cov(x,y)
#(b)  coefficient of correlation
sd_x <- sd(x)
sd_y <- sd(y)
var_x <- var(x)
var_y <- var(y)
coef_cor <- covariance/(sd_x * sd_y)
#Funktion aus R
coef_cor <- cor(x,y)
#regression line: criterion variable Y and predictor variable X
linear_regression <- lm(y ~ x)
summary(linear_regression)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
abline(linear_regression)
x <- c(2, 6, 3, 4, 5)
y <- c(3, 7, 4, 7, 6)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
#(a) covariance
covariance <- cov(x,y)
#(b)  coefficient of correlation
sd_x <- sd(x)
sd_y <- sd(y)
var_x <- var(x)
var_y <- var(y)
coef_cor <- covariance/(sd_x * sd_y)
#Funktion aus R
coef_cor <- cor(x,y)
#regression line: criterion variable Y and predictor variable X
linear_regression <- lm(y ~ x)
summary(linear_regression)
plot(x = x, y = y,
xlim = c(0,10),
ylim = c(0,10))
abline(linear_regression)
linear_regression <- lm(x ~ y)
summary(linear_regression)
plot(x = y, y = x,
xlim = c(0,10),
ylim = c(0,10))
abline(linear_regression)
